# Bundles Buddi for distribution.  Yes, I know I should make an ant script
#  to do this, but I am a) too lazy and b) using some stuff that I don't
#  know how to do from the ant script (such as FTP uploads).
#
# This script is meant to run on OS X, although it should be able to be
#  modified quite easily to run on Linux.  Windows is right out, unless
#  you use Cygwin.
#
# You need to actually create the Buddi.jar file first.  I use the FatJar
#  plugin for Eclipse to do this, and it works quite well.
#
############################

DEST=/Users/wyatt/Desktop/Buddi
OSXROOT=$DEST/Buddi_OSX
OSX=$OSXROOT/Buddi
GENERIC=$DEST/Buddi
WINDOWSROOT=$DEST/Windows
WINDOWS=$WINDOWSROOT/Buddi
SOURCE=source
VERSION=`grep 'String VERSION = ' src/org/homeunix/drummer/Const.java | cut -f 7 -d ' ' | sed -e 's/";//' | sed -e 's/"//'`

if [ "$1" == "--release" ]; then
	grep -q "^$VERSION (" Documents/Changelog.txt
	if [ "$?" != 0 ]; then
		echo "Changelog not updated.  Exiting."
		exit 1
	fi
fi

ant

#./bundleWeb --local

#Export the SVN source
rm -rf $DEST
mkdir -p $DEST
svn export . $DEST/$SOURCE

#Create the platform independent directory
mkdir -p $GENERIC
cp Buddi.jar $GENERIC
cp buddi32.ico $GENERIC
#cp -R $DEST/$SOURCE/Languages $GENERIC
#cp -R Help $GENERIC
cp -R $DEST/$SOURCE/Documents $GENERIC
cp -R $DEST/$SOURCE/Licenses $GENERIC

#Create the OSX directory
mkdir -p $OSXROOT
cp -R $DEST/$SOURCE/Buddi_OSX_Folder $OSX
cp Buddi.jar $OSX/Buddi.app/Contents/Resources/Java/
cp lib/quaqua*.jar $OSX/Buddi.app/Contents/Resources/Java/Quaqua.jar
#cp -R $DEST/$SOURCE/Languages $OSX/Buddi.app/Contents/Resources/Java/
#cp -R Help $OSX/Buddi.app/Contents/Resources/Java/
cp -R $DEST/$SOURCE/lib/libquaqua.jnilib $OSX/Buddi.app/Contents/Resources/Java/
cp -R $DEST/$SOURCE/Documents $OSX
cp -R $DEST/$SOURCE/Licenses $OSX

#Create the Windows bundle
TEMP_LAUNCH=temp.xml
cp launch4j.xml $TEMP_LAUNCH
if [ "$VERSION" != "" ]; then
	sed -i .bak  -e "s/VERSION/${VERSION}.0/" $TEMP_LAUNCH
	sed -i .bak  -e "s/VERSION_LONG/${VERSION}.0/" $TEMP_LAUNCH
fi
#Make the .exe, with correct version as set in previous lines
./launch4j/launch4j ../$TEMP_LAUNCH
rm $TEMP_LAUNCH*
mkdir -p $WINDOWS
cp Buddi.exe $WINDOWS
#cp -R $DEST/$SOURCE/Languages $WINDOWS
#cp -R Help $WINDOWS
cp -R $DEST/$SOURCE/Documents $WINDOWS
cp -R $DEST/$SOURCE/Licenses $WINDOWS

#Tar the source
tar -C $DEST -czvf $DEST/$SOURCE.tgz $SOURCE
#cp -R $DEST/$SOURCE.tgz $GENERIC
#cp -R $DEST/$SOURCE.tgz $OSX

#Remove the src directories
rm -rf $DEST/$SOURCE
#rm $DEST/$SOURCE.tgz

if [ "$1" == "--release" ]; then
	# Update the version.txt
#	VERSION_UNSTABLE=`grep 'String VERSION = ' ../Buddi/src/org/homeunix/drummer/Const.java | cut -f 7 -d ' ' | sed -e 's/";//' | sed -e 's/"//'`
#	VERSION_STABLE=`grep 'String VERSION = ' ../Buddi\ Stable/src/org/homeunix/drummer/Const.java | cut -f 7 -d ' ' | sed -e 's/";//' | sed -e 's/"//'`
#	
#	echo "STABLE=$VERSION_STABLE" > version.txt
#	echo "UNSTABLE=$VERSION_UNSTABLE" >> version.txt
#	
#	scp version.txt olsonw@shell.sf.net:/home/groups/b/bu/buddi/htdocs/version.txt	
	
	svn copy https://svn.sourceforge.net/svnroot/buddi/trunk https://svn.sourceforge.net/svnroot/buddi/tags/$VERSION -m "Tagging release $VERSION"
fi

if [ "$VERSION" != "" ]; then
	#Zip and DMG the bundles
	sed -i .bak  -e "s/BUDDI_VERSION/$VERSION/" $OSX/Buddi.app/Contents/Info.plist
	rm $OSX/Buddi.app/Contents/Info.plist.bak
	cd $DEST
	#zip -r Buddi-$VERSION.zip Buddi
	tar -czvf Buddi-$VERSION.tgz Buddi
	# Cleanup Generic
	rm -rf $GENERIC

	cd $WINDOWSROOT
	zip -r Buddi-$VERSION.zip Buddi
	mv Buddi-$VERSION.zip $DEST
	cd $DEST
	rm -rf $WINDOWSROOT

	mkdir $GENERIC
	mv $OSX $GENERIC/Buddi
	hdiutil create -format UDZO -srcfolder $GENERIC -o Buddi-${VERSION}.dmg
	rm -rf $OSXROOT
	rm -rf $GENERIC

	mv $DEST/$SOURCE.tgz $DEST/Buddi-${VERSION}.src.tgz
fi

if [ "$1" == "--release" ]; then
	# Upload release files
	USER=anonymous
	PASS=pass
	ftp -n upload.sf.net << END_OF_FTP
user $USER $PASS
cd /incoming
lcd $DEST
bin
put Buddi-$VERSION.zip
put Buddi-$VERSION.tgz
put Buddi-$VERSION.dmg
put Buddi-$VERSION.src.tgz
bye
END_OF_FTP
	echo Upload Complete
fi
